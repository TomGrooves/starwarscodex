{"version":3,"sources":["assets/styles/entry.module.scss","assets/styles/accordion.module.scss","assets/styles/navigation.module.scss","assets/styles/pagination.module.scss","assets/styles/mainpage.module.scss","assets/styles/search.module.scss","assets/styles/header.module.scss","assets/styles/footer.module.scss","context/ContextProvider.jsx","components/AccordionComponent.jsx","components/EntryComponent.jsx","components/PaginationComponent.jsx","helpers/fetch.js","pages/MainPage.jsx","components/SearchComponent.jsx","components/NavigationComponent.jsx","components/HeaderComponent.jsx","components/FooterComponent.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","AppContext","createContext","AppContextProvider","children","useState","page","setPage","category","setCategory","searchResult","setSearchResult","Provider","value","Accordion","props","useContext","active","setActive","child","title","useEffect","className","Style","wrapper","style","fontSize","accordion","onClick","shown","hidden","seperator","EntryComponent","entryCategory","setEntryCategory","data","birth_year","climate","episode_id","designation","vehicle_class","starship_class","people","name","gender","hair_color","height","mass","skin_color","planets","diameter","gravity","orbital_period","rotation_period","population","surface_water","terrain","films","director","producer","opening_crawl","species","average_height","average_lifespan","language","hair_colors","eye_colors","skin_colors","vehicles","model","manufacturer","crew","passengers","cargo_capacity","max_atmosphering_speed","consumables","cost_in_credits","starships","length","hyperdrive_rating","PaginationComponent","Pagination","number","color","window","scrollTo","pagination","x","total","push","doFetch","url","type","a","options","headers","method","body","fetch","response","json","console","log","MainPage","setData","res","getStarWarsData","entries","results","map","item","i","searchEntries","mainpage","Math","ceil","count","SearchComponent","searchParam","setSearchParam","allData","setAllData","innerData","categories","Object","key","catUrl","y","merged","flat","getAllData","search","onChange","e","target","placeholder","toLocaleLowerCase","includes","toLowerCase","NavigationComponent","stickyActive","setStickyActive","navRef","useRef","navHandler","offSet","current","offsetTop","addEventListener","pageYOffset","ref","navigation","fixed","textDecoration","HeaderComponent","header","FooterComponent","footer","href","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dd2e6c23.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"people\":\"entry_people__3AW7h\",\"planets\":\"entry_planets__AtdGh\",\"films\":\"entry_films__1RTHL\",\"species\":\"entry_species__1Sgit\",\"vehicles\":\"entry_vehicles__QeIq8\",\"starships\":\"entry_starships__2oTRe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"accordion_wrapper__31mVQ\",\"seperator\":\"accordion_seperator__1W1T5\",\"accordion\":\"accordion_accordion__3rMP0\",\"shown\":\"accordion_shown__3enik\",\"hidden\":\"accordion_hidden__BugXi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"navigation_navigation__30coP\",\"fixed\":\"navigation_fixed__4VaEq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"pagination_pagination__3xWfg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainpage\":\"mainpage_mainpage__LZdjS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"search_search__2yIDT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__T4Du8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"footer_footer__254KV\"};","import React, { createContext, useState } from \"react\";\r\n\r\nconst AppContext = createContext();\r\n\r\n// Create context for global variables and states\r\nconst AppContextProvider = ({ children }) => {\r\n\r\n  let [page, setPage] = useState(1)\r\n  let [category, setCategory] = useState('people')\r\n  let [searchResult, setSearchResult] = useState([])\r\n  \r\n  // Return AppContext.provider with said states\r\n  return (\r\n    <AppContext.Provider value={{ \r\n      page,\r\n      setPage,\r\n      category,\r\n      setCategory,\r\n      searchResult,\r\n      setSearchResult, \r\n      }}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport { AppContext, AppContextProvider }","import React, {useContext, useEffect, useState} from 'react';\nimport Style from '../assets/styles/accordion.module.scss';\nimport {AppContext} from '../context/ContextProvider';\n\nfunction Accordion(props) {\n\n    // Import needed states from AppContext\n    const { page, category } = useContext(AppContext)\n\n    // Set states used by component\n    const [active, setActive] = useState(false)    \n    \n    // Prop destructuring with defaults if no props are provided\n    const child = props.child || \"No child content selected\"\n    const title = props.title || \"Accordian\"\n\n    // useEffect to reset active accordion if page or category changes\n    useEffect(() => {\n        setActive(false)\n    },[page, category])\n\n    return (\n    <section className={Style.wrapper}>\n        <div style={active ? {fontSize: \"2rem\"} : null} className={Style.accordion} onClick={() => {active ? setActive(false): setActive(true)}} ><h3>{title}</h3></div>\n        <div className={active ? Style.shown: Style.hidden}>{child}</div>\n        <span className={Style.seperator}></span>\n    </section>\n    )\n}\n\nexport default Accordion","import React, { useEffect, useState } from 'react'\r\nimport Accordion from './AccordionComponent'\r\nimport Style from '../assets/styles/entry.module.scss'\r\n\r\nexport function EntryComponent(props) {\r\n\r\n    // States needed by component\r\n    let [entryCategory, setEntryCategory] = useState(\"people\")\r\n\r\n    // useEffect hook to assign props to specific category\r\n    useEffect(() => {\r\n        function checkEntryCategory() {\r\n            if (props.data.birth_year){\r\n                setEntryCategory('people')\r\n            }\r\n        \r\n            else if (props.data.climate){\r\n                setEntryCategory('planets')\r\n            }\r\n        \r\n            else if (props.data.episode_id){\r\n                setEntryCategory('films')\r\n            }\r\n        \r\n            else if(props.data.designation){\r\n                setEntryCategory('species')\r\n            }\r\n        \r\n            else if(props.data.vehicle_class){\r\n                setEntryCategory('vehicles')\r\n            }\r\n        \r\n            else if (props.data.starship_class){\r\n                setEntryCategory('starships')\r\n            }\r\n        }\r\n\r\n        checkEntryCategory()\r\n    }, [props])\r\n\r\n    // Create accordion for people category\r\n    const people = \r\n        <Accordion title={props.data.name} child={\r\n            <ul className={Style.people}>\r\n                <li><p>Name: </p> {props.data.name}</li>\r\n                <li><p>Gender: </p> {props.data.gender}</li>\r\n                <li><p>Hair color: </p> {props.data.hair_color}</li>\r\n                <li><p>Height: </p> {props.data.height} cm</li>\r\n                <li><p>Weight: </p> {props.data.mass} kg</li>\r\n                <li><p>Skin color: </p> {props.data.skin_color}</li>\r\n            </ul>\r\n            }>\r\n        </Accordion>\r\n\r\n    // Create accordion for planet category\r\n    const planets = \r\n        <Accordion title={props.data.name} child={\r\n            <ul className={Style.planets}>\r\n                <li><p>Name: </p> {props.data.name}</li>\r\n                <li><p>Climate: </p> {props.data.climate}</li>\r\n                <li><p>Diameter: </p> {props.data.diameter} km</li>\r\n                <li><p>Gravity: </p> {props.data.gravity}</li>\r\n                <li><p>Orbital period: </p> {props.data.orbital_period} days</li>\r\n                <li><p>Rotation period: </p> {props.data.rotation_period} days</li>\r\n                <li><p>Population: </p> {props.data.population}</li>\r\n                <li><p>Surface water: </p> {props.data.surface_water} m</li>\r\n                <li><p>Terrain: </p> {props.data.terrain}</li>\r\n            </ul>\r\n            }>\r\n        </Accordion>\r\n    \r\n    // Create accordion for films category\r\n    const films =\r\n        <Accordion title={props.data.title} child={\r\n            <div className={Style.films}>\r\n            <ul>\r\n                <li><p>Title: </p> {props.data.title}</li>\r\n                <li><p>Director: </p> {props.data.director}</li>\r\n                <li><p>Producer: </p> {props.data.producer}</li>\r\n                <li><p>Episode: </p> {props.data.episode_id}</li>\r\n            </ul>\r\n            <span><p>Opening: </p> {props.data.opening_crawl}</span>\r\n            </div>\r\n            }>\r\n        </Accordion>\r\n\r\n    // Create accordion for species category\r\n    const species = \r\n        <Accordion title={props.data.name} child={\r\n            <ul className={Style.species}>\r\n                <li><p>Name: </p> {props.data.name}</li>\r\n                <li><p>Height: </p> {props.data.average_height} cm</li>\r\n                <li><p>Lifespan: </p> {props.data.average_lifespan} years</li>\r\n                <li><p>Designation: </p> {props.data.designation}</li>\r\n                <li><p>Language: </p> {props.data.language}</li>\r\n                <li><p>Hair colors: </p> {props.data.hair_colors}</li>\r\n                <li><p>Eye colors: </p> {props.data.eye_colors}</li>\r\n                <li><p>Skin colors: </p> {props.data.skin_colors}</li>\r\n            </ul>\r\n            }>\r\n        </Accordion>\r\n\r\n    // Create accordion for vehicles category\r\n    const vehicles = \r\n        <Accordion title={props.data.name} child={\r\n            <ul className={Style.vehicles}>\r\n                <li><p>Name: </p> {props.data.name}</li>\r\n                <li><p>Model: </p> {props.data.model}</li>\r\n                <li><p>Manufacturer: </p> {props.data.manufacturer}</li>\r\n                <li><p>Crew: </p> {props.data.crew}</li>\r\n                <li><p>Passengers: </p> {props.data.passengers}</li>\r\n                <li><p>Capacity: </p> {props.data.cargo_capacity}</li>\r\n                <li><p>Atmospheric speed: </p> {props.data.max_atmosphering_speed} kmH</li>\r\n                <li><p>Class: </p> {props.data.vehicle_class}</li>\r\n                <li><p>Consumables: </p> {props.data.consumables}</li>\r\n                <li><p>Cost: </p> {props.data.cost_in_credits} credits</li>\r\n            </ul>\r\n            }>\r\n        </Accordion>\r\n\r\n    // Create accordion for starships category\r\n    const starships = \r\n        <Accordion title={props.data.name} child={\r\n            <ul className={Style.starships}>\r\n                <li><p>Name: </p> {props.data.name}</li>\r\n                <li><p>Model: </p> {props.data.model}</li>\r\n                <li><p>Manufacturer: </p> {props.data.manufacturer}</li>\r\n                <li><p>Length: </p> {props.data.length} m</li>\r\n                <li><p>Crew: </p> {props.data.crew}</li>\r\n                <li><p>Passengers: </p> {props.data.passengers}</li>\r\n                <li><p>Atmospheric speed: </p> {props.data.max_atmosphering_speed} KmH</li>\r\n                <li><p>Class: </p> {props.data.starship_class}</li>\r\n                <li><p>Hyperdrive rating: </p> {props.data.hyperdrive_rating}</li>\r\n                <li><p>Capacity: </p> {props.data.cargo_capacity}</li>\r\n                <li><p>Consumables: </p> {props.data.consumables}</li>\r\n                <li><p>Cost: </p> {props.data.cost_in_credits} credits</li>\r\n            </ul>\r\n        }>\r\n        </Accordion>\r\n       \r\n        // Switch to determine which category to return\r\n        switch (entryCategory) {    \r\n            case \"people\":\r\n                return people\r\n            case \"planets\":\r\n                return planets    \r\n            case \"films\":\r\n                return films\r\n            case \"species\":\r\n                return species\r\n            case \"vehicles\":\r\n                return vehicles     \r\n            case \"starships\":\r\n                return starships\r\n            default: \r\n                return people\r\n            }\r\n}","import React, {useContext} from 'react';\r\nimport { AppContext } from '../context/ContextProvider';\r\nimport Style from '../assets/styles/pagination.module.scss';\r\n\r\nexport function PaginationComponent(props) {\r\n\r\n    // Import states from AppContext\r\n    const { page, setPage } = useContext(AppContext);\r\n\r\n    // Function to create pagination object with props.number\r\n    function Pagination(props) {\r\n        return (\r\n            <button style={page === props.number ? {color:\"#FFE81F\"} : null} onClick={() => {setPage(props.number); window.scrollTo(0,0)}}>{props.number}</button>\r\n        )\r\n    }\r\n\r\n    let pagination = []\r\n    \r\n    // Based on props.total number, push pagination component to empty array\r\n    for (let x = 1; x < props.total; x++){\r\n        pagination.push(\r\n            <Pagination key={x} number={x}></Pagination>\r\n        )\r\n    }\r\n\r\n    // return array with components\r\n    return (\r\n        <div className={Style.pagination}>\r\n            {pagination}\r\n        </div>\r\n    )\r\n\r\n}","// Fetch helper function with default GET method\r\nexport async function doFetch(url, type, data) {\r\n\r\n    let method = type || 'GET'\r\n    let body = data || null\r\n\r\n    const options = {\r\n        headers : {\r\n          \"Content-Type\":\"application/json\"\r\n        },\r\n        method : method,\r\n        body : body\r\n      }\r\n\r\n    try {\r\n      const response = await fetch(url, options)\r\n      const data = await response.json()\r\n      return data\r\n    }\r\n    catch (error) {\r\n      console.log(error)\r\n    }\r\n  }","import React, { useContext, useEffect, useState } from 'react'\r\nimport { EntryComponent } from '../components/EntryComponent'\r\nimport { PaginationComponent } from '../components/PaginationComponent'\r\nimport {doFetch} from '../helpers/fetch'\r\nimport { AppContext } from '../context/ContextProvider'\r\nimport Style from '../assets/styles/mainpage.module.scss'\r\n\r\nexport function MainPage() {\r\n    // Import global states from AppContext\r\n    const {page, category, searchResult} = useContext(AppContext)\r\n    \r\n    // States needed by component\r\n    let [data, setData] = useState([])\r\n\r\n    // useEffect hook to fetch data by category and page number when page or category changes\r\n    useEffect(() => {\r\n        let getStarWarsData = async () => {\r\n            let url = `https://swapi.dev/api/${category}/?page=${page}`\r\n            let res = await doFetch(url)\r\n            setData(res)\r\n        }\r\n \r\n        getStarWarsData()\r\n    },[page, category])\r\n    \r\n    // Create array of EntryComponents when data.results is present\r\n    const entries = data.results && data.results.map((item, i) => {\r\n        return (\r\n            <EntryComponent key={i} data={item}></EntryComponent>\r\n        )\r\n    })\r\n\r\n    // Create array of EntryComponents from searchResults when searchResult is not a string and is preset\r\n    const searchEntries = typeof(searchResult) !== \"string\" && searchResult.length > 0 ? \r\n        searchResult.map((item, i) => {\r\n            return (\r\n                <EntryComponent key={i} data={item}></EntryComponent>\r\n            )\r\n        }) \r\n    : searchResult\r\n\r\n    // Conditional rendering which shows either searchEntries or entries from page and category\r\n    return (\r\n    \r\n      <div className={Style.mainpage}>\r\n          {searchEntries.length <= 0 ? \r\n          <>\r\n          {entries} \r\n            <PaginationComponent total={Math.ceil(data.count/10+1)}/>\r\n          </>\r\n          : searchEntries}\r\n      </div>\r\n\r\n    \r\n    )\r\n}","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { AppContext } from \"../context/ContextProvider\";\r\nimport { doFetch } from \"../helpers/fetch\";\r\nimport Style from '../assets/styles/search.module.scss'\r\nimport {FiArrowRightCircle} from 'react-icons/fi'\r\n\r\nexport function SearchComponent() {\r\n\r\n  // Import global states from AppContext\r\n  const { setSearchResult} = useContext(AppContext);\r\n\r\n  // fetch everything and store it in an array\r\n  // take input from user and loop through array looking for matches\r\n\r\n  // local states needed by component\r\n  let [searchParam, setSearchParam] = useState(\"\");\r\n  let [allData, setAllData] = useState([]);\r\n\r\n  // function to fetch all data from API\r\n  // First gets all category keys and fetches each category from API\r\n  // Then pushes all results from each category page number into innerData array\r\n  // Then pushes all these resulst from each innerData.results array into data array\r\n  // Finally flattens data array to create one big list of all entries in the API to search through\r\n  async function getAllData() {\r\n    let data = [];\r\n    let innerData = [];\r\n    let categories = [];\r\n    let start_url = \"https://swapi.dev/api/\";\r\n    let res = await doFetch(start_url);\r\n\r\n    for (const [key,] of Object.entries(res)) {\r\n      categories.push(key);\r\n    }\r\n\r\n    for (let x = 0; x < categories.length; x++) {\r\n      let catUrl = `https://swapi.dev/api/${categories[x]}`;\r\n      let res = await doFetch(`${catUrl}/`);\r\n      for (let y = 1; y < res.count / 10 + 1; y++) {\r\n        innerData.push(await doFetch(`${catUrl}/?page=${y}`));\r\n      }\r\n    }\r\n\r\n    if (innerData) {\r\n      for (let y = 0; y < innerData.length; y++) {\r\n        data.push(innerData[y].results);\r\n      }\r\n    }\r\n\r\n    let merged = data.flat(1);\r\n    setAllData(merged);\r\n  }\r\n\r\n  // Search function to loop through allData and return results\r\n  // Checks if searchParam is not empty, then loops through all entries in AllData\r\n  // then checks each value in key, value pair of each entry for a match with searchParam\r\n  // if the entry does not allready exist, pushes it to results array\r\n  // otherwise sets searchResult to \"no result found\"\r\n  function search() {\r\n    setSearchResult([])\r\n    \r\n    let results = [];\r\n    if (searchParam !== \"\") {\r\n      for (let x = 0; x < allData.length; x++) {\r\n        for (const [, value] of Object.entries(allData[x])) {\r\n          if (typeof value == \"string\" && value.toLocaleLowerCase().includes(searchParam.toLowerCase())) {\r\n            if (!results.includes(allData[x])) {\r\n              results.push(allData[x]);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      setSearchResult(results);\r\n      setSearchParam(\"\")\r\n      if (results.length <= 0) {\r\n        setSearchResult(<h2>No results found</h2>);\r\n      }\r\n    } else {\r\n        setSearchResult(<h2>No results found</h2>);\r\n    }\r\n  }\r\n\r\n  // useEffect to run allData once component mounts\r\n  useEffect(() => {\r\n    if (allData.length === 0) {\r\n      getAllData();\r\n    }\r\n  }, [allData.length]);\r\n\r\n  return (\r\n    <div className={Style.search}>\r\n      <input value={searchParam} onChange={(e) => setSearchParam(e.target.value)} placeholder=\"Search\"></input>\r\n      <button onClick={() => {search();}}><FiArrowRightCircle/></button>\r\n    </div>\r\n  );\r\n}\r\n","import React, {useContext, useEffect, useRef, useState} from 'react'\r\nimport {AppContext} from '../context/ContextProvider'\r\nimport { SearchComponent } from './SearchComponent';\r\nimport Style from '../assets/styles/navigation.module.scss'\r\n\r\nexport function NavigationComponent () {\r\n\r\n    // Import states from AppContext \r\n    const {setCategory, category, setPage, setSearchResult} = useContext(AppContext)\r\n    \r\n    // State used to check if user scrolled past navbar\r\n    let [stickyActive, setStickyActive] = useState(false)\r\n   \r\n    // Ref for navbar used to get offSetTop\r\n    const navRef = useRef()\r\n    \r\n    // useEffect hook to set offsetTop once DOM has loaded and add eventlistener for scroll changes\r\n    useEffect(()=>{\r\n        \r\n        const offSet = navRef.current ? navRef.current.offsetTop : null\r\n    \r\n        function checkSticky() {\r\n            if (window.pageYOffset > offSet){\r\n                setStickyActive(true)\r\n            }\r\n            else {\r\n                setStickyActive(false)\r\n            }\r\n        }\r\n      \r\n        window.addEventListener(\"scroll\", (e) => {\r\n            checkSticky()\r\n        });\r\n    }, [])\r\n\r\n    // Handler function to change category, reset page number and searchresult\r\n    function navHandler(category) {\r\n        setCategory(category); \r\n        setPage(1); \r\n        setSearchResult([])\r\n        window.scrollTo(0,0)\r\n    }\r\n\r\n    // HTML for navbar with inline style for changing currently active navlink\r\n    return (\r\n        <nav ref={navRef} className={stickyActive ? `${Style.navigation} ${Style.fixed}` : Style.navigation}>\r\n            <ul>\r\n                <li style={category === \"people\" ? {fontSize: \"1.3rem\", textDecoration: \"underline\"} : null} onClick={() => {navHandler('people')}}>People</li>\r\n                <li style={category === \"planets\" ? {fontSize: \"1.3rem\", textDecoration: \"underline\"} : null} onClick={() => {navHandler('planets')}}>Planets</li>\r\n                <li style={category === \"films\" ? {fontSize: \"1.3rem\", textDecoration: \"underline\"} : null} onClick={() => {navHandler('films')}}>Films</li>\r\n                <li style={category === \"species\" ? {fontSize: \"1.3rem\", textDecoration: \"underline\"} : null} onClick={() => {navHandler('species')}}>Species</li>\r\n                <li style={category === \"vehicles\" ? {fontSize: \"1.3rem\", textDecoration: \"underline\"} : null} onClick={() => {navHandler('vehicles')}}>Vehicles</li>\r\n                <li style={category === \"starships\" ? {fontSize: \"1.3rem\", textDecoration: \"underline\"} : null} onClick={() => {navHandler('starships')}}>Starships</li>\r\n            </ul>\r\n                <SearchComponent/>\r\n        </nav>\r\n    )\r\n}","import React from 'react'\r\nimport Style from '../assets/styles/header.module.scss'\r\n\r\nexport function HeaderComponent(){\r\n\r\n    // Header component with headline\r\n    return(\r\n        <header className={Style.header}>\r\n            <h1>Star Wars Codex</h1>\r\n        </header>\r\n    )\r\n}","import React from 'react'\r\nimport Style from '../assets/styles/footer.module.scss'\r\n\r\nexport function FooterComponent(){\r\n\r\n    // Footer component with names\r\n    return(\r\n        <footer className={Style.footer}>\r\n            <p>Photo by \r\n                <a href=\"https://unsplash.com/@jeremyperkins?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Jeremy Perkins</a> on <a href=\"https://unsplash.com/s/photos/stars?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Unsplash</a> - Star Wars API by <a href=\"https://swapi.dev/\">SWAPI</a> - Code by <a href=\"https://www.kasperfrydensberg.dk\">Kasper Frydensberg</a>\r\n            </p>\r\n        </footer>\r\n    )\r\n}","import { MainPage } from \"./pages/MainPage\";\nimport { AppContextProvider } from './context/ContextProvider';\nimport { NavigationComponent } from \"./components/NavigationComponent\";\nimport { HeaderComponent } from \"./components/HeaderComponent\";\nimport { FooterComponent } from \"./components/FooterComponent\";\nimport './index.css';\n\n// Top level component - returns header, nav, mainpage and footer to render\n// Wrapped in AppContext to get globally needed states in child components\nfunction App() {\n  return (\n    <AppContextProvider>\n        <HeaderComponent/>\n        <NavigationComponent/>\n        <MainPage/>\n        <FooterComponent/>\n    </AppContextProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}